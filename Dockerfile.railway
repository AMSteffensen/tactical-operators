# Railway-specific Dockerfile for API Server
# This runs from the project root via railway.json configuration
FROM node:20-alpine AS base

# Install dependencies
FROM base AS deps
WORKDIR /app

# Copy workspace package files
COPY package*.json ./
COPY shared/package*.json ./shared/
COPY api-server/package*.json ./api-server/

# Install all dependencies including workspaces
RUN npm ci && npm cache clean --force

# Build shared package
FROM base AS shared-builder
WORKDIR /app
COPY shared/ ./shared/
COPY package*.json ./
RUN npm ci --workspace=shared
WORKDIR /app/shared
RUN npm run build

# Build API server
FROM base AS api-builder
WORKDIR /app

# Copy all necessary files
COPY package*.json ./
COPY shared/ ./shared/
COPY api-server/ ./api-server/
COPY --from=shared-builder /app/shared/dist ./shared/dist

# Install dependencies and build
RUN npm ci --workspace=api-server
WORKDIR /app/api-server
RUN npm run build

# Production image
FROM base AS runner
WORKDIR /app

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 api-server

# Copy built application
COPY --from=api-builder --chown=api-server:nodejs /app/api-server/dist ./dist
COPY --from=api-builder --chown=api-server:nodejs /app/api-server/package.json ./package.json
COPY --from=api-builder --chown=api-server:nodejs /app/api-server/tsconfig.json ./tsconfig.json
COPY --from=api-builder --chown=api-server:nodejs /app/api-server/prisma ./prisma
COPY --from=shared-builder --chown=api-server:nodejs /app/shared/dist ./shared/dist
COPY --from=shared-builder --chown=api-server:nodejs /app/shared/package.json ./shared/package.json

# Copy production dependencies
COPY --from=deps --chown=api-server:nodejs /app/node_modules ./node_modules

# Set permissions
RUN chown -R api-server:nodejs /app
USER api-server

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Start application - run API server directly
CMD ["node", "-r", "tsconfig-paths/register", "dist/app.js"]
